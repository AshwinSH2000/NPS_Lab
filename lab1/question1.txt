client
// Q1 TCP program to send an array of numbers to the server and choose from 4 options to do the required stuff
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<sys/types.h>
#include<netinet/in.h>
#include<sys/socket.h>
#define myport 1234
int main()
{
	//create assign  listen accept operate reply
	int sockfd = socket(AF_INET, SOCK_STREAM, 0);
	if(sockfd == -1)
	{	printf("socket creation error");
		exit(0);
	}
	struct sockaddr_in c_addr;
	c_addr.sin_port = htons(myport);
	c_addr.sin_family = AF_INET;
	c_addr.sin_addr.s_addr = inet_addr("127.0.0.1");
	memset(c_addr.sin_zero, '\0', sizeof(c_addr.sin_zero));
	
	int size = sizeof(struct sockaddr);
	connect(sockfd, (struct sockaddr*) &c_addr, sizeof(c_addr));
	
	int buffer[10]={3,2,5,1,6,7},choice, sz, temp;
	int odd[10] = {0};
	int even[10] = {0};
	int a =0, b = 0;
	
	while(1)
	{
		printf("\n1. Sort in ascending order");
		printf("\n2. Sort in descending order");
		printf("\n3. Split into odd and even arrays");
		printf("\n4. Exit");
		printf("\nEnter your choice:");
		scanf("%d", &choice);
		switch(choice)
		{
			case 1://asc order
					printf("\nEnter the no of elements in array:");
					scanf("%d", &sz);
					printf("\nEnter the elements in array:");
					//for(int i=0 ; i<sz ; i++)
					//	scanf("%d", &buffer[i]);
					printf("sending");
					send(sockfd, buffer, 10, 0);
					send(sockfd, &sz, 1, 0);
					send(sockfd, &choice, 1, 0);
					recv(sockfd, buffer, 10,0);
					printf("\nThe array in ascending order is \n");
					for(int i=0 ; i<sz ; i++)
						printf("%d ", buffer[i]);
					break;
		case 2://des ord
				printf("\nEnter the no of elements in array:");
					scanf("%d", &sz);
					printf("\nEnter the elements in array:");
					for(int i=0 ; i<sz ; i++)
						scanf("%d", &buffer[i]);
					send(sockfd, buffer, 10, 0);
					send(sockfd, &sz, 1, 0);
					send(sockfd, &choice, 1, 0);
					recv(sockfd, buffer, 10,0);
					printf("\nThe array in descending order is \n");
					for(int i=0 ; i<sz ; i++)
						printf("%d ", buffer[i]);
					break;					
		case 3://split
					printf("\nEnter the no of elements in array:");
					scanf("%d", &sz);
					printf("\nEnter the elements in array:");
					for(int i=0 ; i<sz ; i++)
						scanf("%d", &buffer[i]);
					send(sockfd, buffer, 10, 0);
					send(sockfd, &sz, 1, 0);
					send(sockfd, &choice, 1, 0);
					
					recv(sockfd, odd, 10,0);
					recv(sockfd, &b, 1, 0);
					recv(sockfd, even, 10, 0);
					recv(sockfd, &a, 1, 0);
					printf("\nThe odd elements in the array \n");
					for(int i=0 ; i<b ; i++)
						printf("%d ", odd[i]);
					printf("\nThe odd elements in the array \n");
					for(int i=0 ; i<a ; i++)
						printf("%d ", even[i]);
					break;

					
		} 
	}
}






///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
server
// Q1 TCP program to send an array of numbers to the server and choose from 4 options to do the required stuff
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<sys/types.h>
#include<netinet/in.h>
#include<sys/socket.h>
#define myport 1234
int main()
{
	//create assign bind listen accept operate reply
	int size;
	int sockfd = socket(AF_INET, SOCK_STREAM, 0);	//socket creation
	struct sockaddr_in	server_addr, c_addr;	
	
	//feeding values into the socket address structure
	server_addr.sin_family = AF_INET;
	server_addr.sin_port = htons(myport);
	server_addr.sin_addr.s_addr = inet_addr("127.0.0.1");
	memset( server_addr.sin_zero, '\0', sizeof(server_addr.sin_zero) );
	
	bind( sockfd, (struct sockaddr *) &server_addr, sizeof(server_addr) );
	
	//ready for listening
	listen(sockfd, 10);
	printf("The server is ready for chatting.\n");
	size = sizeof(struct sockaddr);
	
	int afd = accept(sockfd, (struct sockaddr *) & c_addr, &size);
	int buffer[10],choice, sz, temp;
	int odd[10] = {0};
	int even[10] = {0};
	int a =0, b = 0;
	while(1)
	{
		recv(afd, buffer, 10, 0);
		recv(afd, &sz, 1, 0);
		recv(afd, &choice, 1, 0);
		printf("Received the first set");
		switch(choice)
		{
			case 1:// have to sort asc
					for(int i=0 ; i<sz-1 ; i++)
					{
						for(int j=0 ; j<sz-1-i ; j++)
						{
							if(buffer[j]>buffer[j+1])
							{
								temp = buffer[j];
								buffer[j] = buffer[j+1];
								buffer[j+1] = temp;
							}
						}
					}
					send(afd, buffer, 10, 0);
					break;
			case 2:// hav to sort it in dsc order
					for(int i=0 ; i<sz-1 ; i++)
					{
						for(int j=0 ; j<sz-1-i ; j++)
						{
							if(buffer[j]<buffer[j+1])
							{
								temp = buffer[j];
								buffer[j] = buffer[j+1];
								buffer[j+1] = temp;
							}
						}
					}
					send(afd, buffer, 10, 0);
					break;
			case 3: // have to split the array into odd and even


					for(int i=0 ; i<sz ; i++)
					{
						if(buffer[i]%2==0)
							even[a++] = buffer[i];
						else
							odd[b++] = buffer[i];					
					}
					send(afd, odd, 10, 0);
					send(afd , &b, 1 ,0);
					send(afd, even, 10, 0);
					send(afd, &a, 1, 0);

					break;
			case 4:close(sockfd);
					exit(0);
			
		} 
	}
}
